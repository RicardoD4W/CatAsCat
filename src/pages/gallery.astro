---
export const prerender = false

import { getAllDailiesCats } from '@/data/getCatData'
import MainLayout from '@/layouts/MainLayout.astro'
import type { IGallery } from '@/types/gallery'

let catsArray: IGallery[]

try {
  catsArray = (await getAllDailiesCats()) as IGallery[]
} catch (error) {
  return Astro.redirect('/500')
}

let firstData = catsArray[0]?.date ?? '2024-09-02T06:12:28.000Z'
let firstFormattedData =
  new Date(firstData).toISOString().split('T')[0] ?? '2024-09-02'
let currentMonday = new Date(firstFormattedData)

const groupedCatsArray = []
for (let i = 0; i < catsArray.length; i += 7) {
  groupedCatsArray.push({
    weekMonday: currentMonday.toLocaleDateString('es-ES').split('T')[0],
    cats: catsArray.slice(i, i + 7),
  })
  currentMonday = new Date(currentMonday.setDate(currentMonday.getDate() + 7))
}

groupedCatsArray.reverse()
---

<MainLayout customTitle='Galería'>
  <article class='info'>
    <h3 class='contact-info'>
      Esta galería es una recopilación de cada uno de los gatos diarios,
      organizados en bloques semanales.
    </h3>
  </article>
  <article class='container'>
    <section class='masonry-container'>
      {
        typeof catsArray === 'string' ? (
          <p>{catsArray}</p>
        ) : (
          groupedCatsArray.map(group => (
            <div class='week-group'>
              <h4 class='week-note'>Semana del {group.weekMonday}</h4>
              <div class='masonry'>
                {group.cats.map(({ id, date, url }) => (
                  <figcaption class={`brick brick-${id}`}>
                    <a
                      href={`/gallery/${id}`}
                      class='brick'
                    >
                      <img
                        decoding='async'
                        loading='lazy'
                        src={url}
                        alt={`Imagen de gatito del día ${date}`}
                        title={`Imagen de gatito del día ${date.toLocaleDateString('es-ES').split('T')[0]}`}
                        width='300'
                        height='200'
                      />
                    </a>
                  </figcaption>
                ))}
              </div>
            </div>
          ))
        )
      }
    </section>
  </article>
</MainLayout>

<style>
  .info {
    font-family: var(--font-body);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
  }

  .contact-info {
    padding: 0 20px;
  }

  .container {
    padding: 20px;
  }

  .masonry-container {
    width: 100%;
    display: block;
    margin: 0 auto;
  }

  .week-group {
    margin-bottom: 40px;
  }

  .week-note {
    font-family: var(--font-body);
    font-weight: normal;
    text-align: center;
    padding-bottom: 10px;
    font-size: 1.25rem;
  }

  .masonry {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: 10px;
  }

  .brick {
    box-sizing: border-box;
    position: relative;
    transition:
      transform 0.3s ease,
      opacity 0.3s ease;
  }

  .brick img {
    width: 238px;
    height: 238px;
    object-fit: cover;
    transition:
      transform 0.3s ease,
      opacity 0.3s ease;
    transform: scale(1);
    border-radius: 3px;
  }

  .brick img:hover {
    transform: scale(1.1);
  }

  /* Efecto para las imágenes no seleccionadas */
  .masonry:hover .brick:not(:hover) img {
    transform: scale(0.9);
    opacity: 0.6;
  }
</style>
